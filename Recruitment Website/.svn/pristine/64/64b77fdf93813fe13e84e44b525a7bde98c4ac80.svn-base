-- ================================================
-- Author:      Manjiangjie
-- Version:     v0.9
-- Create date: 2015-03-31
-- Description: 测试用数据库 test_db
-- Modify:      2015-04-06	        
--              增加用户表等，修改主、外键关系，增加视频面试、收藏以及关注、私信列表，增加一些字段，修改部分字段类型
-- ================================================


create database test_db;

set character_set_database=utf8;
set character_set_server=utf8;

use test_db;


-- 用户基本信息表（id，用户种类，密码，邮箱，手机号，验证码，注册时间）
create table user_info(
userId int not null auto_increment primary key,
userType tinyint not null,
userPassword varchar(32) not null,
userEmail varchar(20) not null,
userTelNum varchar(15),
userAuthCode varchar(5) not null,
userRegisterTime datetime not null
);

-- 用户登录日志表（id，登录时间，登录ip，登录状态（检验登录是否成功），登录的浏览器，用户id）
create table user_login_log(
loginId int not null auto_increment primary key,
loginTime datetime not null,
loginIp varchar(32) not null,
loginStatus tinyint not null,
loginBrowser tinyint not null,
userId int not null -- 外键
);

-- 用户操作日志表（id，操作类型，操作模块，操作内容，操作时间，操作人ip，操作备注，用户id）
create table user_operate_log(
operateId int not null auto_increment primary key,
operateType tinyint not null,
operateModule tinyint not null,
operateContent varchar(255),
operateTime datetime not null,
operateIp varchar(32) not null,
operateRemarks varchar(255),
userId int not null -- 外键
);

-- 求职者信息（id，姓名，头像，生日，性别，面试邀请的企业数量，查看简历的HR人数，每日投递简历数量，信息创建时间，信息最后修改时间）
create table applicant_info(
applicantId int not null auto_increment primary key,
applicantName varchar(20) not null,
applicantPic text,
applicantBirthday varchar(25) not null, 
applicantSex tinyint not null,
applicantInterviewNum tinyint not null,
applicantCheckNum int not null,
applicantDelieverNum int not null,
createTime datetime,
lastEditTime datetime
);

-- 求职者链接网站（id，微信号，脸书，推特，阴死他棺木，求职者id）
create table applicant_link(
linkId int not null auto_increment primary key,
linkWechat varchar(255),
linkFacebook varchar(255),
linkTwitter varchar(255),
linkInstagram varchar(255),
applicantId int not null -- 外键
);

-- 关注表（关注者id，被关注者id，关注时间，关注状态（是否相互关注），关注类型（好友还是公司））
create table follow(
followFromId int not null,
followToId int not null,
createTime datetime not null,
followStatus tinyint not null,
followType tinyint not null
);

-- 私信表（id，发送者id，接受者id，私信类型（好友还是公司），私信状态（发送还是接收），私信内容，发送时间，阅读时间）
create table message(
messageId int not null auto_increment primary key,
messageFromId int not null,
messageToId int not null,
messageType tinyint not null,
messageStatus tinyint not null,
messageContent text,
messageSendTime datetime not null,
messageReadTime datetime
);

-- HR（id，姓名，性别，手机号，邮箱，头像，职位，私信状态（是否接收私信），信息创建时间，信息最后修改时间）
create table hr_info(
hrId int not null auto_increment primary key,
hrName varchar(20) not null,
hrSex tinyint,
hrTelNum varchar(15),
hrEmail varchar(20),
hrPic text,
hrJob varchar(20),
hrMessageStatus tinyint not null,
createTime datetime,
lastEditTime datetime
);

-- 公司信息（id，名称，营业执照，公司Logo，公司规模，公司性质，融资情况，公司简介，联系人姓名，联系人性别，联系人手机号，公司网址，公司地址，信息创建时间，信息最后修改时间，行业id，HRid）
create table company_info(
companyId int not null auto_increment primary key,
companyName varchar(40) not null,
companyLicense text not null,
companyLogo text,
companySize tinyint,
companyNature tinyint,
companyFinancing tinyint,
companyProfile text,
companyContactName varchar(20) not null,
companyContactSex tinyint,
companyContactTelNum varchar(15),
companyWebsite varchar(30),
companyAddress varchar(50),
createTime datetime,
lastEditTime datetime,
industryId int, -- 外键
hrId int not null -- 外键
);

-- 公司资讯（id，标题，选填标题，封面，正文，公司id）
create table company_news(
newsId int not null auto_increment primary key,
newsTitle1 varchar(40) not null,
newsTitle2 varchar(40),
newsCover text,
newsContent longtext not null,
companyId int not null -- 外键
);

-- 投递和面试（id，面试状态（等待面试，被拒，面试邀约，完成面试），预约时间，最后修改预约时间，投递简历时间，职位id，简历id，HRid）
create table interview(
interviewId int not null auto_increment primary key,
interviewStatus tinyint,
createTime datetime,
lastEditTime datetime,
interviewDeliverTime datetime,
jobId int not null, -- 外键
resumeId int not null, -- 外键
hrId int not null -- 外键
);

-- 收藏（id，收藏类型（求职者还是HR收藏），收藏时间，最后修改时间，职位id，简历id，HRid）
create table collect(
collectId int not null auto_increment primary key,
collectType tinyint not null,
createTime datetime,
lastEditTime datetime,
jobId int not null, -- 外键
resumeId int not null, -- 外键
hrId int not null -- 外键
);

-- 职位（id，名称，描述，工作经验，学历要求，工作性质，招聘人数，工资，点击量，地址，创建时间，最后修改时间，公司id，行业id，HRid）
create table job_info(
jobId int not null auto_increment primary key,
jobName varchar(60) not null,
jobDescription text not null,
jobExperience tinyint,
jobEducation tinyint,
jobNature tinyint,
jobRecruitNum int,
jobSalary int,
jobStatus tinyint not null,
jobClick bigint,
jobAddress varchar(50),
createTime datetime,
lastEditTime datetime,
companyId int not null, -- 外键
industryId int not null, -- 外键
hrId int not null -- 外键
);

-- 职位标签（id，标签id，标签内容，职位id）
create table job_tag(
tagId int not null auto_increment primary key,
tagTypeId int not null,
tagContent varchar(20),
jobId int -- 外键
);

-- 简历（id，民族，简介，头像，手机号，开始工作时间，国籍，政治状态，籍贯，简历完成进度，简历创建时间，简历最后修改时间，链接id，求职者id）
create table resume_info(
resumeId int not null auto_increment primary key,
resumeEthnic tinyint not null,
resumeProfile text not null,
resumePic text not null,
resumeTelNum varchar(15),
resumeStartWorkTime datetime,
resumeNationality tinyint not null,
resumePoliticalStatus tinyint not null,
resumeAddress varchar(50) not null,
resumeProgress int not null,
createTime datetime,
lastEditTime datetime,
linkId int, -- 外键
applicantId int not null -- 外键
);

-- 简历中的语言能力（id，语言类型，简历id）
create table resume_language(
languageId int not null auto_increment primary key,
languageCategory varchar(20),
resumeId int not null -- 外键
);

-- 简历中的工作经历（id，工作时间，公司，职位，简历id）
create table resume_work(
workId int not null auto_increment primary key,
workTime varchar(20) not null,
workCompany varchar(40) not null,
workJob varchar(60) not null,
resumeId int not null -- 外键
);

-- 求职者或简历中的教育经历（id，学校名称，学校地址，就读时间，学历，专业，地址id，简历id，求职者id）
create table education(
educationId int not null auto_increment primary key,
educationSchoolName varchar(40) not null,
educationSchoolAddress varchar(50) not null,
educationTime varchar(20) not null,
educationDegree tinyint not null,
educationMajor varchar(30) not null,
resumeId int not null, -- 外键
applicantId int not null -- 外键
);

-- 论坛（id，提问者id，创建时间，主题，标题，提问内容，回复内容，回复者id）
create table forum(
forumId int not null auto_increment primary key,
askId int,
createTime datetime,
forumTopic varchar(20),
forumTitle varchar(50),
forumAskContent text,
forumAnswerContent text,
answerId int
);

-- 以下为字典表

-- 行业
create table industry(
industryId int not null auto_increment primary key,
industryName varchar(20)
);

-- 地址
create table address(
addressId int not null auto_increment primary key,
addressCountry varchar(20),
addressArea varchar(20)
);


-- 添加外键
alter table user_login_log add foreign key (userId) references user_info(userId) on delete cascade on update cascade;

alter table user_operate_log add foreign key (userId) references user_info(userId) on delete cascade on update cascade;

alter table applicant_link add foreign key (applicantId) references applicant_info(applicantId) on delete cascade on update cascade;

alter table company_info add foreign key (industryId) references industry(industryId) on delete cascade on update cascade;
alter table company_info add foreign key (hrId) references hr_info(hrId) on delete cascade on update cascade;

alter table company_news add foreign key (companyId) references company_info(companyId) on delete cascade on update cascade;

alter table interview add foreign key (resumeId) references resume_info(resumeId) on delete cascade on update cascade;
alter table interview add foreign key (hrId) references hr_info(hrId) on delete cascade on update cascade;
alter table interview add foreign key (jobId) references job_info(jobId) on delete cascade on update cascade;

alter table collect add foreign key (resumeId) references resume_info(resumeId) on delete cascade on update cascade;
alter table collect add foreign key (hrId) references hr_info(hrId) on delete cascade on update cascade;
alter table collect add foreign key (jobId) references job_info(jobId) on delete cascade on update cascade;

alter table job_info add foreign key (hrId) references hr_info(hrId) on delete cascade on update cascade;
alter table job_info add foreign key (industryId) references industry(industryId) on delete cascade on update cascade;
alter table job_info add foreign key (companyId) references company_info(companyId) on delete cascade on update cascade;

alter table job_tag add foreign key (jobId) references job_info(jobId) on delete cascade on update cascade;

alter table resume_info add foreign key (linkId) references applicant_link(linkId) on delete cascade on update cascade;
alter table resume_info add foreign key (applicantId) references applicant_info(applicantId) on delete cascade on update cascade;

alter table resume_work add foreign key (resumeId) references resume_info(resumeId) on delete cascade on update cascade;

alter table resume_language add foreign key (resumeId) references resume_info(resumeId) on delete cascade on update cascade;

alter table education add foreign key (resumeId) references resume_info(resumeId) on delete cascade on update cascade;
alter table education add foreign key (applicantId) references applicant_info(applicantId) on delete cascade on update cascade;

drop database test_db;