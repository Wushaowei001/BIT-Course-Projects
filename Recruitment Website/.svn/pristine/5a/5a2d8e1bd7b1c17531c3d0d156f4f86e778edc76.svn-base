-- ================================================
-- Author:      Manjiangjie
-- Create date: 2015-03-31
-- Description: 测试用数据库 test_db
-- Modify:      无
-- ================================================

create database test_db;

set character_set_database=utf8;
set character_set_server=utf8;

use test_db;

-- 求职者
create table applicant_info(
applicantId int not null auto_increment primary key,
applicantName varchar(10) not null,
applicantPassword varchar(20) not null,
applicantPic text,
applicantBirthday date not null, 
applicantSex varchar(2) not null,
applicantEmail varchar(20) not null,
applicantTelNum varchar(15),
applicantAuthCode varchar(5) not null,
applicantRegisterTime datetime,
applicantResumeId int,
applicantLinkId int
);

-- HR
create table hr_info(
hrId int not null auto_increment primary key,
hrName varchar(10) not null,
hrPassword varchar(20) not null,
hrSex varchar(2),
hrCompanyTelNum varchar(15),
hrContactName varchar(10),
hrContactTelNum varchar(15),
hrPic text,
hrEmail varchar(20),
hrAuthCode varchar(5) not null,
hrCompanyId int,
hrRegisterTime datetime
);

-- 企业
create table company_info(
companyId int not null auto_increment primary key,
companyLicense text not null,
companyName varchar(40) not null,
companySize varchar(20),
companyNature varchar(10),
companyProfile text,
companyAuthCode varchar(5) not null,
companyEmail varchar(20),
companyWebsite varchar(30),
companyIndustryId int,
companyAddressId int not null,
companyContact varchar(10),
companyRegisterTime datetime
);

-- 职位
create table job_info(
jobId int not null auto_increment primary key,
jobHrId int,
jobApplicantId int,
jobName varchar(60) not null,
jobDescription text,
jobExperience varchar(10),
jobRequirement varchar(15),
jobNature varchar(5),
jobRecruitNum varchar(3),
jobSalary varchar(10) not null,
jobClick bigint,
jobIndustryId int not null,
jobAddressId int not null,
jobCompanyId int not null,
jobReleaseTime datetime
);

-- 求职者或简历中的教育经历
create table education(
educationId int not null auto_increment primary key,
educationResumeId int,
educationApplicantId int,
educationName varchar(50),
educationAddressId int,
educationStartTime date,
educationEndTime date,
educationDegree varchar(10) not null,
educationMajor varchar(20) not null
);

-- 简历
create table resume_info(
resumeId int not null auto_increment primary key,
resumeEthnic varchar(5),
resumeProfile text,
resumePic text,
resumeTelNum varchar(15),
resumeStartTime datetime,
resumeNationality varchar(5),
resumePoliticalStatus varchar(10),
resumeLinkId int,
resumeAddressId int,
resumeDelieverTime datetime -- 简历的投递时间
);

-- 求职者链接网站
create table link(
linkId int not null auto_increment primary key,
linkWechat varchar(30),
linkFacebook varchar(30),
linkTwitter varchar(30),
linkInstagram varchar(30)
);

-- 行业
create table industry(
industryId int not null auto_increment primary key,
industryName varchar(20)
);

-- 地址
create table address(
addressId int not null auto_increment primary key,
addressCountry varchar(20),
addressArea varchar(20)
);

-- 好友
create table friend(
friendId int not null auto_increment primary key,
friendApplicantId int,
friendName varchar(20)
);

-- 职位标签
create table job_tag(
tagId int not null auto_increment primary key,
tagJobId int not null,
tagText varchar(20)
);

-- 企业资讯
create table company_news(
newsId int not null auto_increment primary key,
newsCompanyId int,
newsTitle1 varchar(20),
newsTitle2 varchar(20),
newsCover text,
newsContent longtext
);

-- 简历中的语言能力
create table resume_language(
languageId int not null auto_increment primary key,
languageResume int,
languageCategory varchar(20)
);

-- 简历中的工作经历
create table resume_work(
workId int not null auto_increment primary key,
workResumeId int,
workStartYear varchar(4),
workEndYear varchar(4),
workCompany varchar(20),
workJob varchar(20)
);

-- 添加外键
alter table applicant_info add foreign key (applicantLinkId) references link(linkId) on delete cascade on update cascade;
alter table applicant_info add foreign key (applicantResumeId) references resume_info(resumeId) on delete cascade on update cascade;

alter table hr_info add foreign key (hrCompanyId) references company_info(companyId) on delete cascade on update cascade;

alter table company_news add foreign key (newsCompanyId) references company_info(companyId) on delete cascade on update cascade;

alter table company_info add foreign key (companyIndustryId) references industry(industryId) on delete cascade on update cascade;
alter table company_info add foreign key (companyAddressId) references address(addressId) on delete cascade on update cascade;

alter table job_tag add foreign key (tagJobId) references job_info(jobId) on delete cascade on update cascade;

alter table job_info add foreign key (jobHrId) references hr_info(hrId) on delete cascade on update cascade;
alter table job_info add foreign key (jobApplicantId) references applicant(applicantId) on delete cascade on update cascade;
alter table job_info add foreign key (jobIndustryId) references industry(industryId) on delete cascade on update cascade;
alter table job_info add foreign key (jobAddressId) references address(addressId) on delete cascade on update cascade;
alter table job_info add foreign key (jobCompanyId) references company_info(companyId) on delete cascade on update cascade;

alter table resume_info add foreign key (resumeLinkId) references link(linkId) on delete cascade on update cascade;
alter table resume_info add foreign key (resumeAddressId) references address(addressId) on delete cascade on update cascade;
alter table resume_info add foreign key (resumeWorkId) references resume_work(workId) on delete cascade on update cascade;

alter table resume_work add foreign key (workResumeId) references resume_info(resumeId) on delete cascade on update cascade;

alter table resume_language add foreign key (languageResumeId) references resume_info(resumeId) on delete cascade on update cascade;

alter table education add foreign key (educationResumeId) references resume_info(resumeId) on delete cascade on update cascade;
alter table education add foreign key (educationAddressId) references address(addressId) on delete cascade on update cascade;
alter table education add foreign key (educationApplicantId) references applicant(applicantId) on delete cascade on update cascade;

alter table friend add foreign key (friendApplicantId) references applicant_info(applicantId) on delete cascade on update cascade;

drop database test_db;